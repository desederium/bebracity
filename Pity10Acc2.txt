

getgenv().WebHook = "https://discord.com/api/webhooks/1271198705713680465/Hbmn0WxCqbMNHhZqhSKad8ygVBZOejfc5RTc8ya3cle68_oc4SrdPQJfwpJIuc784efZ"


-- // PlaceId
local MAIN_GAME_PLACE_ID = 2809202155


-- // Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TeleportService  = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer.PlayerGui

local function WebHookGot()
    local responce = request({
        Url = getgenv().WebHook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game.HttpService:JSONEncode({content = "@everyone Got Lucky" })
    })
end


local function WebHookGot2()
    local responce = request({
        Url = "https://discord.com/api/webhooks/1284752043264708629/hby6BujgiirUYSUWjIbF9enFpiwT2eVtgPe1RI0uuavxvIz3Piz1gHycFriR7y8LwJ4D",
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game.HttpService:JSONEncode({content = "@everyone Got Lucky" })
    })
end


task.spawn(function()
    local fuckingskipbug = true
    if fuckingskipbug then 
        wait(30)
        if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen1") then
            game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)
            fuckingskipbug = false
        end
    end
end)

task.spawn(function()
    local IAMGOINGINSANEFROMYOU = true
    while IAMGOINGINSANEFROMYOU do task.wait(1)
        for _,v in pairs(game.LogService:GetLogHistory()) do
            if string.find(v["message"], "BEGAN") or string.find(v["message"], "bruh") then
                game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)
                IAMGOINGINSANEFROMYOU = false
            end
        end
    end
end)

repeat task.wait() until game.Players.LocalPlayer
repeat task.wait() until game.Players.LocalPlayer.Character
repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild("RemoteEvent")

local function skipScreen() -- AUTOSKIP
    if not LocalPlayer.PlayerGui:FindFirstChild("HUD") then 
        local HUD = game.ReplicatedStorage.Objects.HUD:Clone() 
        HUD.Parent = LocalPlayer.PlayerGui 
    end 
 
    LocalPlayer.Character.RemoteEvent:FireServer("PressedPlay") 
 
    if LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen1") then 
        LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen1"):Destroy() 
    end 
 
    if LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen") then 
        LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen"):Destroy() 
    end 
end 

--[[
local function Hop()
    ID = nil
    local Servers = {}
    local Got = false
    local Url = "https://games.roblox.com/v1/games/2809202155/servers/Public?sortOrder=Desc&limit=100" 
    local Server = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/2809202155/servers/Public?sortOrder=Asc&limit=100")) 


    while Server.nextPageCursor ~= nil do task.wait() 
        if Server.data then 
            for i , server1 in ipairs(Server.data) do 
                if server1.playing < 17 then
                    Servers[#Servers+1] = server1.id
                end
            end 
        end 
        Server = game:GetService("HttpService"):JSONDecode(game:HttpGet(Url.."&cursor="..tostring(Server.nextPageCursor))) 
    end 
    

    ID = Servers[math.random(1,#Servers)]
    TeleportService:TeleportToPlaceInstance(MAIN_GAME_PLACE_ID, ID)

end

]]--


local function Hop()

    local game = game
    local PlaceId = game.PlaceId
    local JobId = game.JobId
    local PlaceIdString = tostring(PlaceId)
    
    local folderpath = "ServerHopper"
    local PlaceFolder = folderpath.."\\"..PlaceIdString
    local JobIdStorage = PlaceFolder.."\\JobIdStorage.json"
    local CodeToExecute = PlaceFolder.."\\Code.lua"
    local data
    local code
    
    local Players = game:FindService("Players")
    local http = game:GetService("HttpService")
    local TeleportService = game:GetService("TeleportService")
    
    local function jsone(str) return http:JSONEncode(str) end
    local function jsond(str) return http:JSONDecode(str) end
    
    if not isfolder(folderpath) then
        makefolder(folderpath)
        print("Created Folder",folderpath)
    end
    
    if not isfolder(PlaceFolder) then
        makefolder(PlaceFolder)
        print("Created PlaceFolder",PlaceFolder)
    end
    
    if isfile(JobIdStorage) then
        data = jsond(readfile(JobIdStorage))
    else
        data = {
            JobIds = {}
        }
        writefile(JobIdStorage,jsone(data))
        print("Created JobIdStorage",JobIdStorage)
    end
    
    if not isfile(CodeToExecute) then
        writefile(CodeToExecute,"")
        print("Created CodeToExecute",CodeToExecute)
        return 
    end
    
    if not table.find(data['JobIds'],JobId) then
        table.insert(data['JobIds'],JobId)
    end
    
    writefile(JobIdStorage,jsone(data))
    
    repeat task.wait() until game:IsLoaded() and Players.LocalPlayer
    
    local lp = Players.LocalPlayer
    
    local servers = {}
    local cursor = ''
    
    while cursor and #servers <= 0 do
        local req = request({Url = ("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100&cursor%s"):format(PlaceId,cursor)})
        local body = jsond(req.Body)
        
        if body and body.data then
            coroutine.wrap(function()
                for i,v in next, body.data do
                    if typeof(v) == 'table' and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers then --not table.find(data['JobIds'],v.id) then
                        table.insert(servers,1,v.id)
                    end
                end
            end)()
            
            if body.nextPageCursor then
                cursor = body.nextPageCursor
            end
        end
        task.wait()
    end
    local succ,err = pcall(function()
        loadstring(readfile(CodeToExecute))()
    end)
    if not succ then
        rconsoleprint("An Error has occursed\nPlease Check: "..CodeToExecute.."\nError:\n"..err)
        return
    end
    
    
    while #servers > 0 do
        local random = servers[math.random(1,#servers)]
        
        TeleportService:TeleportToPlaceInstance(PlaceId,random,lp)
        task.wait(1)
    end
end


local function ItemBypass()
    local repFirst = game.GetService(game, 'ReplicatedFirst'); 
    local itemSpawn = repFirst.ItemSpawn; 
    
    local vector3Metatable = getrawmetatable(Vector3.new()); 
    local oldIndex = rawget(vector3Metatable, '__index'); 
    
    setreadonly(vector3Metatable, false); do 
        vector3Metatable.__index = newcclosure(function(self, idx) 
            if(string.lower(idx) == 'magnitude' and getcallingscript() == itemSpawn) then 
                return 0; 
            end; 
            return oldIndex(self, idx); 
        end); 
    end; setreadonly(vector3Metatable, true); 
end

local function TPBypass()
    local TPBypass 
    TPBypass = hookfunction(getrawmetatable(game).__namecall, newcclosure(function(self, ...) 
    local args = {...} 
    if self.Name == "Returner" and args[1] == "idklolbrah2de"  then 
            return "  ___XP DE KEY" 
        end 
    return TPBypass(self, ...) 
    end)) 
end

task.spawn(function()
    while true do task.wait(1)
        TPBypass()
    end
end)


FoundLucky = false


local function CheckLucky()
    for _, v in pairs(Workspace:GetDescendants()) do
        if v.Name == "ProximityPrompt" and v.ObjectText == "Lucky Arrow" then
            WebHookGot2()
            FoundLucky = true
        end
    end

    LuckySpawned = false

    if FoundLucky == true then
        repeat task.wait()
            ItemBypass()

            for i,v in next, Workspace.Item_Spawns.Items:GetChildren() do
                if v:IsA("Model") and v:FindFirstChild("MeshPart") and v.ProximityPrompt.ObjectText == "Lucky Arrow" then
                    if v then
                        if v.MeshPart:FindFirstChild("PointLight") then
                            LuckySpawned = true
                        end
                    end
                end
            end
            task.wait(5)
        until LuckySpawned == true
    end

    if FoundLucky == false then
        Hop()
    end
end

local function GetLucky()
    for i,v in next, Workspace.Item_Spawns.Items:GetChildren() do 
        if v:IsA("Model") and v:FindFirstChild("MeshPart") and v.ProximityPrompt.ObjectText == "Lucky Arrow" then 
            if v then 
                pcall(function()                          
                    while v.MeshPart:FindFirstChild("PointLight") do task.wait() 
                        print(v.MeshPart.CFrame) 
                        LocalPlayer.Character.HumanoidRootPart.CFrame = v.MeshPart.CFrame + Vector3.new(0,0,0) 
                        task.wait(1) 
                        fireproximityprompt(v.ProximityPrompt) 
                    end 
                end) 
            end 
        end
    end 
    WebHookGot()
    task.wait(1)
    Hop()
end

skipScreen()
TPBypass() wait(0.2)

pcall(function()
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-401.001587, -30.120422274, -382.940338)
end)

task.spawn(function()
    task.wait(80)
    game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)
end)

CheckLucky()

if FoundLucky == true then
    GetLucky()
end
